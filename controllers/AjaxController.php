<?phpuse Pimcore\Controller\Action\Frontend;use Formbuilder\Model\Form;use Formbuilder\Lib\Frontend as FormFrontEnd;use Formbuilder\Lib\Mailer;class Formbuilder_AjaxController extends Frontend {    public $languages = NULL;    public function parseAction()    {        $formId = $this->_getParam('_formId');        $locale = $this->_getParam('_language');        $templateId = $this->_getParam('_mailTemplate');        $valid = FALSE;        $messages = array();        $validationData = array();        $mainList = new Form();        $formData = $mainList->getById( $formId );        if( $formData instanceof Form )        {            $frontendLib = new FormFrontEnd();            $form = $frontendLib->getForm($formData->getId(), $locale, true);            $frontendLib->addDefaultValuesToForm( $form, array( 'formId' => $formId, 'locale' => $locale, 'mailTemplate' => $templateId) );            $params = $frontendLib->parseFormParams( $this->getAllParams(), $form );            $formValid = TRUE;            $valid = FALSE;            if( $frontendLib->hasRecaptchaV2() )            {                $formValid = $form->isValid( $params, $frontendLib->getRecaptchaV2Key() );            }            if( $formValid === TRUE )            {                $valid = $form->isValid( $params );            }            if( $valid )            {                if( $templateId !== null )                {                    $valid = Mailer::sendForm( $templateId, array('data' => $form->getValues() ) );                    $messages = Mailer::getMessages();                }            }            else            {                $validationData = $form->getMessages();            }        }        $this->_helper->json(array(            'success' => $valid,            'message' => $messages,            'validationData' => $validationData,        ));    }}